name: Auggie Upgrades (Reusable)

on:
  workflow_call:
    inputs:
      pr-labels:
        required: false
        type: string
        default: 'dependencies,auggie'
      pr-reviewers:
        required: false
        type: string
        default: ''
      group-strategy:
        required: false
        type: string
        default: 'auto'
      auggie-config-path:
        required: false
        type: string
        default: '.auggie.yml'
      auggie-run-args:
        required: false
        type: string
        default: ''
      dry-run:
        required: false
        type: string
        default: 'false'
    secrets:
      GITHUB_TOKEN:
        required: true
      AUGMENT_SESSION_AUTH:
        required: true

jobs:
  run-auggie:
    name: Run Auggie CLI
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Check out caller repo
        uses: actions/checkout@v4

      - name: Set up Node (for CLI wrapper) and Python (polyglot helpers)
        uses: actions/setup-node@v4
        with:
          node-version: '22'
      - uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Diagnostics (token + repo)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          echo "Event: ${{ github.event_name }} | Repo: ${{ github.repository }} | Ref: ${{ github.ref }}"
          echo "gh auth status:" && gh auth status || true
          echo "Viewer permission:" && gh repo view --json viewerPermission -q .viewerPermission || true

      - name: Install Auggie CLI (npm)
        run: |
          set -euo pipefail
          npm i -g @augmentcode/auggie
          auggie --version || npx -y @augmentcode/auggie --version || true


      - name: Run Auggie (automation mode)
        id: auggie
        env:
          # GitHub token used by gh CLI and also mapped to GITHUB_API_TOKEN for Auggie
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          GITHUB_API_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          AUGMENT_SESSION_AUTH: ${{ secrets.AUGMENT_SESSION_AUTH }}
        shell: bash
        run: |
          set -euo pipefail
          CONFIG='${{ inputs["auggie-config-path"] }}'
          EXTRA='${{ inputs["auggie-run-args"] }}'

          # Create instruction for Auggie automation
          cat > .auggie-instruction.md <<'EOT'
You are Auggie, an AI upgrade agent.
Task: Detect and apply dependency/version updates across all ecosystems in this repository. Where breaking changes are required, attempt safe code refactors/codemods to avoid regressions. Keep lockfiles in sync. If a full migration is required, output a clear migration plan with incremental steps.

Requirements:
- Auto-detect ecosystems (npm/yarn/pnpm, pip/poetry, go, cargo, maven/gradle, actions, docker, etc.).
- Prefer non-breaking upgrades; for breaking changes, update code and configs safely.
- Do not delete unrelated files. Avoid destructive operations.
- After changes, write a concise Markdown changelog to .auggie-changelog.md.
- If a full migration is needed, write details to migration-plan.md.
- Be verbose about what changed: packages, versions, code refactors.
EOT

          echo "Running Auggie in print mode with instruction file"
          # Prefer npx invocation for the scoped package
          npx -y @augmentcode/auggie --print --workspace-root . --instruction-file ./.auggie-instruction.md $EXTRA | tee .auggie-output.md || true

      - name: Collect changelog
        id: changelog
        shell: bash
        run: |
          set -euo pipefail
          if [ -f .auggie-changelog.md ]; then
            echo "path=.auggie-changelog.md" >> $GITHUB_OUTPUT
          else
            echo "Generating minimal change summary"
            printf "# Upgrade Summary\n\n" > .auggie-changelog.md
            git status --porcelain >> .auggie-changelog.md || true
            echo "path=.auggie-changelog.md" >> $GITHUB_OUTPUT
          fi

      - name: Collect migration plan (optional)
        id: mig
        shell: bash
        run: |
          set -euo pipefail
          if [ -f migration-plan.md ]; then
            echo "path=migration-plan.md" >> $GITHUB_OUTPUT
          fi

      - name: Create or update PR (or dry-run)
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        shell: bash
        run: |
          set -euo pipefail
          DRY='${{ inputs["dry-run"] }}'
          BRANCH="auggie/upgrade-$(date -u +%Y%m%d)"
          git config user.name "auggie-bot"
          git config user.email "auggie-bot@users.noreply.github.com"

          CHANGES=$(git status --porcelain)
          if [ -z "$CHANGES" ]; then
            echo "No changes to commit"
            # In dry-run, still upload artifacts below
          else
            if [ "$DRY" != "true" ]; then
              git checkout -b "$BRANCH" || git checkout "$BRANCH"
              git add -A
              git commit -m "auggie: automated dependency upgrades"
              git push -u origin "$BRANCH" || true
            fi
          fi

          # Determine default base branch for PR
          BASE=$(gh repo view --json defaultBranchRef -q .defaultBranchRef.name)
          echo "Base branch: $BASE | Dry-run: $DRY"

          TITLE="Auggie: Automated dependency upgrades"
          PR_BODY_HEADER=$(cat <<'EOT'
This PR was created by the Auggie upgrade workflow.

- Detects and applies dependency updates across ecosystems
- Attempts code refactors for breaking changes
- If a full migration is needed, suggests a plan and incremental steps

Changelog (auto-generated):
EOT
)
          CHANGELOG_PATH='${{ steps.changelog.outputs.path }}'
          if [ -f "$CHANGELOG_PATH" ]; then
            PR_CHANGELOG=$(cat "$CHANGELOG_PATH")
          else
            PR_CHANGELOG="- (No detailed changelog available)"
          fi

          MIG_PATH='${{ steps.mig.outputs.path }}'
          if [ -n "$MIG_PATH" ] && [ -f "$MIG_PATH" ]; then
            PR_MIG=$(printf "\n\nMigration plan:\n\n%s" "$(cat "$MIG_PATH")")
          else
            PR_MIG=""
          fi

          BODY="$PR_BODY_HEADER
$PR_CHANGELOG
$PR_MIG"

          if [ "$DRY" = "true" ]; then
            echo "Dry-run enabled: skipping PR creation. Uploading artifacts."
          else
            # Try to create PR or update existing
            gh pr create --title "$TITLE" --body "$BODY" --head "$BRANCH" --base "$BASE" || \
            gh pr create --title "$TITLE" --body "$BODY" --head "$BRANCH" || true

            # Apply labels and request reviewers, if provided
            LABELS='${{ inputs["pr-labels"] }}'
            REVIEWERS='${{ inputs["pr-reviewers"] }}'
            if [ -n "$LABELS" ]; then
              IFS=',' read -ra ARR <<< "$LABELS"
              for l in "${ARR[@]}"; do gh pr edit --add-label "$l" || true; done
            fi
            if [ -n "$REVIEWERS" ]; then
              IFS=',' read -ra ARR <<< "$REVIEWERS"
              for r in "${ARR[@]}"; do gh pr edit --add-reviewer "$r" || true; done
            fi
          fi

      - name: Upload artifacts (dry-run only)
        if: ${{ inputs["dry-run"] == 'true' }}
        uses: actions/upload-artifact@v4
        with:
          name: auggie-dry-run-output
          path: |
            .auggie-output.md
            .auggie-changelog.md
            migration-plan.md

